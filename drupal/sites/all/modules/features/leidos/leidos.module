<?php
/**
 * @file
 * Code for the Leidos feature.
 */

include_once 'leidos.features.inc';

/**
 * Implements hook_form_alter().
 */
function leidos_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#entity_type']) && $form['#entity_type'] == 'fieldable_panels_pane') {
    // Hide some unnecessary fields that clutter the IPE user interface.
    $form['link']['#access'] = FALSE;
    $form['view_mode']['#access'] = FALSE;
    // Custom "add another" button text for better clarity.
    if ($form['#bundle'] == 'link_columns') {
      $form['field_columns']['und']['add_more']['#value'] = t('Add another column');
      foreach ($form['field_columns']['und'] as $key => &$column) {
        if (isset($form['field_columns']['und'][$key]['field_column_links'])) {
          $form['field_columns']['und'][$key]['field_column_links']['und']['add_more']['#value'] = t('Add another section');
        }
      }
    }
  }
  elseif ($form_id == 'panels_panel_context_edit_choose') {
    // Set the default panel layout to Industry Template, remove other layouts.
    $form['categories']['#default_value'] = 'Industry-Template';
    $form['layout']['Industry-Template']['flexible:industry_template']['#default_value'] = 'flexible:industry_template';
    unset($form['categories']['#options']['Builders']);
    unset($form['categories']['#options']['Columns-1']);
    unset($form['categories']['#options']['Columns-2']);
    unset($form['categories']['#options']['Columns-3']);
  }
  elseif ($form_id == 'ctools_page_title_content_type_edit_form') {
    // Only allow h1 tags for override titles.
    $form['override_title_heading']['#default_value'] = 'h1';
    $form['override_title_heading']['#options'] = array(
      'h1' => 'h1',
    );
  }
  if (isset($form['reusable'])) {
    // Remove reusability from panels.
    unset($form['reusable']);
  }
}

/**
 * Implements of hook_views_pre_render().
 */
function leidos_views_pre_render(&$view) {
  // Re-order rotator slides based on specific order set in the panel.
  if ($view->name == 'rotators' && !empty($view->args)) {
    $slides = explode(',', $view->args[0]);
    $slide_count = 0;
    $results = array();
    while ($slide_count < count($slides)) {
      foreach ($view->result as $key => &$result) {
        // Make sure the slide is the correct item for this slot in the order.
        if (isset($slides[$slide_count]) && $result->nid == $slides[$slide_count]) {
          $results[$slide_count] = $result;
          $slide_count++;
        }
      }
    }
    $view->result = $results;
  }
}
